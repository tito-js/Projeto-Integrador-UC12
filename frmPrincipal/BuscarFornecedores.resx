<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cYHYAAAAAElFTkSuQmCC
</value>
  </data>
</root>