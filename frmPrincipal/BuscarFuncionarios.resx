<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
</root>