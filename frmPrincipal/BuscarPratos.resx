<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uwAAAABJRU5ErkJggg==
</value>
  </data>
</root>