<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>